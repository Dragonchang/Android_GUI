From 2960412e648ffac7d321ec01c416882970077119 Mon Sep 17 00:00:00 2001
Subject: [PATCH] [Input] Support touch scale by window

---
 services/inputflinger/InputDispatcher.cpp | 20 +++++++++++++-------
 services/inputflinger/InputDispatcher.h   |  3 ++-
 services/inputflinger/InputWindow.cpp     |  3 +++
 services/inputflinger/InputWindow.h       |  1 +
 4 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/services/inputflinger/InputDispatcher.cpp b/services/inputflinger/InputDispatcher.cpp
index 127519d..cf4086a 100644
--- a/services/inputflinger/InputDispatcher.cpp
+++ b/services/inputflinger/InputDispatcher.cpp
@@ -1758,6 +1758,7 @@ void InputDispatcher::addWindowTargetLocked(const sp<InputWindowHandle>& windowH
     target.shiftY = windowInfo->shiftY;
     target.xOffset += windowInfo->shiftX;
     target.yOffset += windowInfo->shiftY;
+    target.preScaleFactor = windowInfo->preScaleFactor > 0.0f ? windowInfo->preScaleFactor : 1.0f;
     //--[Feature]Support touch shift by window
 }
 
@@ -1775,6 +1776,7 @@ void InputDispatcher::addMonitoringTargetsLocked(Vector<InputTarget>& inputTarge
         //++[Feature]Support touch shift by window
         target.shiftX = 0;
         target.shiftY = 0;
+        target.preScaleFactor = 1.0f;
         //--[Feature]Support touch shift by window
     }
 }
@@ -2074,6 +2076,7 @@ void InputDispatcher::enqueueDispatchEntryLocked(
     //++[Feature]Support touch shift by window
     dispatchEntry->shiftX = inputTarget->shiftX;
     dispatchEntry->shiftY = inputTarget->shiftY;
+    dispatchEntry->preScaleFactor = inputTarget->preScaleFactor;
     //--[Feature]Support touch shift by window
 
     // Apply target flags and update the connection's input state.
@@ -2207,15 +2210,17 @@ void InputDispatcher::startDispatchCycleLocked(nsecs_t currentTime,
             MotionEntry* motionEntry = static_cast<MotionEntry*>(eventEntry);
 
             PointerCoords scaledCoords[MAX_POINTERS];
+            const PointerCoords* usingCoords = motionEntry->pointerCoords;
 
             //++[Feature]Support touch shift by window
-            PointerCoords shiftCoords[MAX_POINTERS];
-            const PointerCoords* usingCoords = shiftCoords;
-
-            for (uint32_t i = 0; i < motionEntry->pointerCount; i++) {
-                shiftCoords[i] = motionEntry->pointerCoords[i];
-                shiftCoords[i].setAxisValue(AMOTION_EVENT_AXIS_X, motionEntry->pointerCoords[i].getAxisValue(AMOTION_EVENT_AXIS_X) - dispatchEntry->shiftX);
-                shiftCoords[i].setAxisValue(AMOTION_EVENT_AXIS_Y, motionEntry->pointerCoords[i].getAxisValue(AMOTION_EVENT_AXIS_Y) - dispatchEntry->shiftY);
+            if (dispatchEntry->shiftX != 0.0f || dispatchEntry->shiftY != 0.0f
+                    || dispatchEntry->preScaleFactor != 1.0f) {
+                for (uint32_t i = 0; i < motionEntry->pointerCount; i++) {
+                    scaledCoords[i] = usingCoords[i];
+                    scaledCoords[i].applyOffset(-dispatchEntry->shiftX, -dispatchEntry->shiftY);
+                    scaledCoords[i].scale(dispatchEntry->preScaleFactor);
+                }
+                usingCoords = scaledCoords;
             }
             //--[Feature]Support touch shift by window
 
@@ -3867,6 +3872,7 @@ void InputDispatcher::dumpDispatchStateLocked(String8& dump) {
             //++[Feature]Support touch shift by window
             dump.appendFormat(", shiftX=%0.3f", windowInfo->shiftX);
             dump.appendFormat(", shiftY=%0.3f", windowInfo->shiftY);
+            dump.appendFormat(", preScaleFactor=%0.3f", windowInfo->preScaleFactor);
             //--[Feature]upport touch shift by window
             dump.appendFormat(", inputFeatures=0x%08x", windowInfo->inputFeatures);
             dump.appendFormat(", ownerPid=%d, ownerUid=%d, dispatchingTimeout=%0.3fms\n",
diff --git a/services/inputflinger/InputDispatcher.h b/services/inputflinger/InputDispatcher.h
index 389a49e..fb58054 100644
--- a/services/inputflinger/InputDispatcher.h
+++ b/services/inputflinger/InputDispatcher.h
@@ -173,7 +173,7 @@ struct InputTarget {
     BitSet32 pointerIds;
 
     //++[Feature]Support touch shift by window
-    float shiftX, shiftY;
+    float shiftX, shiftY, preScaleFactor;
     //--[Feature]Support touch shift by window
 };
 
@@ -636,6 +636,7 @@ private:
         //++[Feature]Support touch shift by window
         float shiftX;
         float shiftY;
+        float preScaleFactor;
         //--[Feature]Support touch shift by window
 
         DispatchEntry(EventEntry* eventEntry,
diff --git a/services/inputflinger/InputWindow.cpp b/services/inputflinger/InputWindow.cpp
index 5e82d75..6ecc897 100644
--- a/services/inputflinger/InputWindow.cpp
+++ b/services/inputflinger/InputWindow.cpp
@@ -47,6 +47,9 @@ bool InputWindowInfo::isTrustedOverlay() const {
             || layoutParamsType == TYPE_STATUS_BAR
             || layoutParamsType == TYPE_NAVIGATION_BAR
             || layoutParamsType == TYPE_SECURE_SYSTEM_OVERLAY
+            //++[Feature]Trust window type of one-hand ui
+            || layoutParamsType == TYPE_BOOT_PROGRESS
+            //--[Feature]Trust window type of one-hand ui
             || layoutParamsType == TYPE_DOCK_DIVIDER;
 }
 
diff --git a/services/inputflinger/InputWindow.h b/services/inputflinger/InputWindow.h
index 48a9442..1e9665b 100644
--- a/services/inputflinger/InputWindow.h
+++ b/services/inputflinger/InputWindow.h
@@ -143,6 +143,7 @@ struct InputWindowInfo {
     //++[Feature]Support touch shift by window
     float shiftX;
     float shiftY;
+    float preScaleFactor;
     //--[Feature]Support touch shift by window
 
     void addTouchableRegion(const Rect& region);
-- 
1.9.1

